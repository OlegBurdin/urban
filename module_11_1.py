import requests
import pandas
from pprint import pprint

URL = 'https://www.cbr-xml-daily.ru/daily_json.js'

"""
Использование модуля requests.
Получить данные о курсах валют с сайта на текущую дату и записать 
полученные данные в переменную r в формате json.
"""

r = requests.get(URL)
json_flag = False
if r.ok:
    try:
        r = r.json()
    except requests.exceptions.JSONDecodeError as e:
        print('Содержимое ответа не в формате json.', 'От источника был получен следующий ответ:',
              r, sep='\n')
    else:
        json_flag = True
pprint(r['Valute'])

"""
Использование модуля pandas.
Сохранить полученные курсы валют в файле .xlsx.
"""

if json_flag:
    # Формируем список валют для записи в файл
    field_list = ['CharCode', 'NumCode', 'Name', 'Nominal', 'Value']
    val_list = []
    for i in r['Valute']:
        line_ = []
        for j in field_list:
            line_.append(r['Valute'][i][j])
        val_list.append(line_)

    val_list.sort(key=lambda x: -x[3])
    pprint(val_list)

    # Сохраняем полученные данные в файл .xlsx
    df1 = pandas.DataFrame(val_list, columns=field_list)
    with pandas.ExcelWriter(f"val_{r['Date'][0:10]}.xlsx") as writer:
        df1.to_excel(writer, sheet_name=str(r['Date'][0:10]))
=>
{'AED': {'CharCode': 'AED',
         'ID': 'R01230',
         'Name': 'Дирхам ОАЭ',
         'Nominal': 1,
         'NumCode': '784',
         'Previous': 27.6868,
         'Value': 27.8533},
 ...
 'USD': {'CharCode': 'USD',
         'ID': 'R01235',
         'Name': 'Доллар США',
         'Nominal': 1,
         'NumCode': '840',
         'Previous': 101.6797,
         'Value': 102.2911}}
[['VND', '704', 'Донгов', 10000, 42.0294],
 ['IDR', '360', 'Рупий', 10000, 63.1388],
 ['UZS', '860', 'Узбекских сумов', 10000, 78.9102],
 ['KRW', '410', 'Вон', 1000, 70.3902],
 ['AMD', '051', 'Армянских драмов', 100, 25.7758],
 ['HUF', '348', 'Форинтов', 100, 25.4766],
 ['KZT', '398', 'Тенге', 100, 19.4016],
 ['RSD', '941', 'Сербских динаров', 100, 89.9962],
 ['JPY', '392', 'Иен', 100, 64.6063],
 ['EGP', '818', 'Египетских фунтов', 10, 20.226],
 ['INR', '356', 'Индийских рупий', 10, 11.9109],
 ['KGS', '417', 'Сомов', 10, 11.7576],
 ['MDL', '498', 'Молдавских леев', 10, 55.5869],
 ['NOK', '578', 'Норвежских крон', 10, 89.6378],
 ['TJS', '972', 'Сомони', 10, 93.5036],
 ['THB', '764', 'Батов', 10, 29.5008],
 ['TRY', '949', 'Турецких лир', 10, 28.9369],
 ['UAH', '980', 'Гривен', 10, 24.2189],
 ['CZK', '203', 'Чешских крон', 10, 41.8728],
 ['SEK', '752', 'Шведских крон', 10, 91.3934],
 ['ZAR', '710', 'Рэндов', 10, 54.0294],
 ['AUD', '036', 'Австралийский доллар', 1, 63.4103],
 ['AZN', '944', 'Азербайджанский манат', 1, 60.1712],
 ['GBP', '826', 'Фунт стерлингов', 1, 126.2477],
 ['BYN', '933', 'Белорусский рубль', 1, 29.378],
 ['BGN', '975', 'Болгарский лев', 1, 53.7964],
 ['BRL', '986', 'Бразильский реал', 1, 16.6821],
 ['HKD', '344', 'Гонконгский доллар', 1, 13.17],
 ['GEL', '981', 'Лари', 1, 36.0243],
 ['DKK', '208', 'Датская крона', 1, 14.1025],
 ['AED', '784', 'Дирхам ОАЭ', 1, 27.8533],
 ['USD', '840', 'Доллар США', 1, 102.2911],
 ['EUR', '978', 'Евро', 1, 105.0893],
 ['CAD', '124', 'Канадский доллар', 1, 71.0849],
 ['QAR', '634', 'Катарский риал', 1, 28.102],
 ['CNY', '156', 'Юань', 1, 13.6934],
 ['NZD', '554', 'Новозеландский доллар', 1, 57.2779],
 ['PLN', '985', 'Злотый', 1, 24.6348],
 ['RON', '946', 'Румынский лей', 1, 21.1919],
 ['XDR', '960', 'СДР (специальные права заимствования)', 1, 132.7186],
 ['SGD', '702', 'Сингапурский доллар', 1, 74.7797],
 ['TMT', '934', 'Новый туркменский манат', 1, 29.226],
 ['CHF', '756', 'Швейцарский франк', 1, 112.2105]]

Process finished with exit code 0
